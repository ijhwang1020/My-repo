git client 종류
- GitBash(original Git : CLI 기반), github desktop, TortoiseGIT, SourceTree, 
github (remote repository)
- 엔터프라이즈 버전(On-premise, Private Cloud) 제공
git의 세가지 주요 기능
- 버전관리, 백업, 협업
작업 Flow
- Save(변경사항 저장) > Commit(버전 생성) > Push/Pull (저장소로 내보내기 및 가져오기)
명령어
- git log, git status, git commit, git push, git pull
git client <-> github 통신 프로토콜 종류
- HTTP 는 인증시에만? 아니면 데이터 주고받을때도 모두 HTTP 인 것인지?

working tree -> staging area -> repository

.git : repository
git init : initialize repository
git status : working tree status
git add : add to stating area
git commit -m "" : create version
git log : show version

git log --stat : 각 버전별 어떤 파일들과 몇개의 줄이 변경되었는지 상세 확인할때 사용
* 상세 내용 기억 안날 땐 구글링해라. 예를 들면 stackoverflow 사이트 *

git diff : show changes
git log -p
git checkout : 다른 버전으로 이동함 (과거 및 현재 이동)
git reset --hard : 해당 버전으로 롤백시킴 (버전정보 및 데이터 모두 롤백시킴)
